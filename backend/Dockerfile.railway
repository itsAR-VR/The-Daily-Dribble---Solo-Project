# Railway-optimized Dockerfile for Anti-Hallucination Bot
FROM python:3.11-slim

# Install Chrome and dependencies with proper setup
RUN apt-get update && apt-get install -y \
    wget \
    curl \
    gnupg \
    unzip \
    fonts-liberation \
    libasound2 \
    libatk-bridge2.0-0 \
    libatk1.0-0 \
    libatspi2.0-0 \
    libcups2 \
    libdbus-1-3 \
    libdrm2 \
    libgbm1 \
    libgtk-3-0 \
    libnspr4 \
    libnss3 \
    libxcomposite1 \
    libxdamage1 \
    libxfixes3 \
    libxkbcommon0 \
    libxrandr2 \
    xdg-utils \
    && rm -rf /var/lib/apt/lists/*

# Install Chrome browser and ChromeDriver
RUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \
    && echo "deb http://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google.list \
    && apt-get update \
    && apt-get install -y google-chrome-stable \
    && rm -rf /var/lib/apt/lists/*

# Install ChromeDriver - simplified approach
RUN CHROME_VERSION=$(google-chrome --version | awk '{print $3}' | cut -d'.' -f1) \
    && echo "Chrome major version: ${CHROME_VERSION}" \
    && wget -q "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_${CHROME_VERSION}" -O /tmp/chromedriver_version || \
       wget -q "https://chromedriver.storage.googleapis.com/LATEST_RELEASE" -O /tmp/chromedriver_version \
    && CHROMEDRIVER_VERSION=$(cat /tmp/chromedriver_version) \
    && echo "ChromeDriver version: ${CHROMEDRIVER_VERSION}" \
    && wget -q "https://chromedriver.storage.googleapis.com/${CHROMEDRIVER_VERSION}/chromedriver_linux64.zip" -O /tmp/chromedriver.zip \
    && unzip -q /tmp/chromedriver.zip -d /tmp/ \
    && mv /tmp/chromedriver /usr/local/bin/chromedriver \
    && chmod +x /usr/local/bin/chromedriver \
    && rm -rf /tmp/chromedriver.zip /tmp/chromedriver_version \
    && /usr/local/bin/chromedriver --version || echo "ChromeDriver installation may have issues"

# Set Chrome environment variables
ENV CHROME_BIN=/usr/bin/google-chrome-stable
ENV CHROME_PATH=/usr/bin/google-chrome-stable
ENV CHROMEDRIVER_PATH=/usr/local/bin/chromedriver

# Set working directory
WORKDIR /app

# Copy requirements first for better caching
COPY backend/requirements.txt .

# Install Python dependencies
RUN pip install --no-cache-dir -r requirements.txt

# Copy backend application code
COPY backend/ .

# Verify Chrome and ChromeDriver installation
RUN google-chrome --version && \
    /usr/local/bin/chromedriver --version && \
    echo "Chrome and ChromeDriver installed successfully"

# Make ChromeDriver accessible to all users and fix dependencies
RUN chmod 755 /usr/local/bin/chromedriver && \
    # Test ChromeDriver can execute
    /usr/local/bin/chromedriver --version || echo "ChromeDriver test failed"

# Create directory for Chrome user data and Selenium cache
RUN mkdir -p /tmp/.chrome && chmod 777 /tmp/.chrome && \
    mkdir -p /root/.cache/selenium && chmod 777 /root/.cache/selenium

# Install missing dependencies for ChromeDriver
RUN apt-get update && apt-get install -y \
    libnss3 \
    libgconf-2-4 \
    libxi6 \
    libglib2.0-0 \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN useradd -m -u 1000 botuser && chown -R botuser:botuser /app

# Set Chrome options for non-root user
ENV CHROME_USER_DATA_DIR=/tmp/.chrome

# Create Selenium cache directory with proper permissions
RUN mkdir -p /home/botuser/.cache/selenium && \
    chown -R botuser:botuser /home/botuser/.cache

# Ensure ChromeDriver is executable by all
RUN chmod 755 /usr/local/bin/chromedriver && \
    chmod 755 /usr/bin/google-chrome-stable || true

# Create a symlink for chromedriver in PATH
RUN ln -sf /usr/local/bin/chromedriver /usr/bin/chromedriver || true

USER botuser

# Pre-configure Selenium to use our ChromeDriver
ENV SE_CHROMEDRIVER_PATH=/usr/local/bin/chromedriver
ENV WDM_SKIP_DRIVER_DOWNLOAD=1
ENV SE_SKIP_DRIVER_DOWNLOAD=1

# Expose port (Railway sets PORT env var)
EXPOSE 8000

# Start FastAPI with anti-hallucination bot
CMD ["python", "-m", "uvicorn", "fastapi_app:app", "--host", "0.0.0.0", "--port", "8000"]