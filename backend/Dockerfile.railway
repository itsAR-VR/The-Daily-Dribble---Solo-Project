# Railway-optimized Dockerfile for Anti-Hallucination Bot
FROM python:3.11-slim

# Install dependencies for Chrome and ChromeDriver
RUN apt-get update && apt-get install -y \
    wget \
    curl \
    gnupg \
    unzip \
    ca-certificates \
    fonts-liberation \
    libasound2 \
    libatk-bridge2.0-0 \
    libatk1.0-0 \
    libatspi2.0-0 \
    libcups2 \
    libdbus-1-3 \
    libdrm2 \
    libgbm1 \
    libgtk-3-0 \
    libgtk-4-1 \
    libnspr4 \
    libnss3 \
    libwayland-client0 \
    libxcomposite1 \
    libxdamage1 \
    libxfixes3 \
    libxkbcommon0 \
    libxrandr2 \
    xdg-utils \
    libu2f-udev \
    libvulkan1 \
    # Additional dependencies for ChromeDriver
    libglib2.0-0 \
    libnss3-dev \
    libgdk-pixbuf2.0-0 \
    libgtk-3-0 \
    libxss1 \
    libgconf-2-4 \
    libxtst6 \
    libappindicator3-1 \
    libasound2 \
    libatk1.0-0 \
    libc6 \
    libcairo2 \
    libcups2 \
    libexpat1 \
    libfontconfig1 \
    libgcc1 \
    libgdk-pixbuf2.0-0 \
    libnspr4 \
    libpango-1.0-0 \
    libpangocairo-1.0-0 \
    libstdc++6 \
    libx11-6 \
    libx11-xcb1 \
    libxcb1 \
    libxcursor1 \
    libxi6 \
    libxrender1 \
    libxtst6 \
    lsb-release \
    && rm -rf /var/lib/apt/lists/*

# Install Google Chrome
RUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | gpg --dearmor -o /usr/share/keyrings/googlechrome-linux-keyring.gpg \
    && echo "deb [arch=amd64 signed-by=/usr/share/keyrings/googlechrome-linux-keyring.gpg] http://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google-chrome.list \
    && apt-get update \
    && apt-get install -y google-chrome-stable \
    && rm -rf /var/lib/apt/lists/* \
    && google-chrome --version

# Note: We're NOT installing ChromeDriver manually
# Selenium 4.6+ will automatically download the correct version

# Set Chrome environment variables
ENV CHROME_BIN=/usr/bin/google-chrome-stable
ENV CHROME_PATH=/usr/bin/google-chrome-stable
ENV GOOGLE_CHROME_BIN=/usr/bin/google-chrome-stable

# Set working directory
WORKDIR /app

# Copy requirements first for better caching
COPY backend/requirements.txt .

# Install Python dependencies
RUN pip install --no-cache-dir -r requirements.txt

# Copy backend application code
COPY backend/ .

# Verify Chrome installation
RUN google-chrome --version && \
    echo "Chrome installed successfully"

# Create directory for Chrome user data and Selenium cache
RUN mkdir -p /tmp/.chrome && chmod 777 /tmp/.chrome && \
    mkdir -p /root/.cache/selenium && chmod 777 /root/.cache/selenium

# Create non-root user
RUN useradd -m -u 1000 botuser && chown -R botuser:botuser /app

# Set Chrome options for non-root user
ENV CHROME_USER_DATA_DIR=/tmp/.chrome

# Create Selenium cache directory with proper permissions for both root and botuser
RUN mkdir -p /home/botuser/.cache/selenium && \
    mkdir -p /root/.cache/selenium && \
    chmod -R 777 /root/.cache && \
    chmod -R 777 /home/botuser/.cache && \
    chmod 755 /usr/bin/google-chrome-stable || true

# Stay as root for now to avoid permission issues
# USER botuser

# Enable Selenium Manager to download ChromeDriver automatically
ENV SE_DRIVER_TIMEOUT_MS=300000
ENV HOME=/root

# Expose port (Railway sets PORT env var)
EXPOSE 8000

# Start FastAPI with anti-hallucination bot
CMD ["python", "-m", "uvicorn", "fastapi_app:app", "--host", "0.0.0.0", "--port", "8000"]

